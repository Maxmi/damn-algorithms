/*
Create a Hash Table class that contains table and size properties inside its constructor. It should create an array of size n based on a given integer n.

The Hash Table class should have the following methods:
generate_hash - generates an index within the table where the value should be stored
add - inserts a value into the index position generated by the hash function
remove - deletes a value from the table based on the given key
get - retrieves a value based on the given key

Note: Don't worry about handling collisions yet. For this implementation, it's okay if we overwrite values that have the same hash. We will address collisions later.

Examples:

const ht = new HashTable(5); => array with 5 empty items, size = 5
ht.add('github', 'alohaglenn'); => generates a hash of 3, stores 'alohaglenn' at index 3 of table
ht.add('email', 'glenngonda@gmail.com'); => generates a hash of 0, stores 'glenngonda@gmail.com' at index 0 of table
ht.get('github'); => returns 'alohaglenn'
ht.get('email'); => returns 'glenngonda@gmail.com'
ht.remove('email'); => deletes 'glenngonda@gmail.com' from table
*/

class HashTable {}

export default HashTable;
